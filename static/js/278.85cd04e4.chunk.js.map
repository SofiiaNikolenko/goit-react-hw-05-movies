{"version":3,"file":"static/js/278.85cd04e4.chunk.js","mappings":"6LAwEA,UArEe,WAAO,IAAD,EACnB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CX,EAAAA,EAAAA,WAAS,GAAnD,eAAOY,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAe,CAUjBG,MAAM,mDAAD,OACgDd,EADhD,8CATW,CACde,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJnB,EAAUmB,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,CACF,GAAE,CAACd,EAAeX,IAenB,OACE,iCACE,kBAAM4B,SAfW,SAAAC,GACnBA,EAAMC,iBACNlB,GAAiB,EAClB,EAYG,WACE,kBACEmB,KAAK,OACLC,KAAK,QACLhC,MAAOO,EACP0B,YAAY,eACZC,SAhBa,SAAAL,GAEnB,GADA5B,EAAS4B,EAAMM,cAAcnC,MAAMoC,eACR,KAAvBP,EAAMQ,OAAOrC,MACf,OAAOM,EAAgB,CAAC,GAE1BA,EAAgB,CAAEgC,MAAOT,EAAMQ,OAAOrC,OACvC,KAYK,mBAAQ+B,KAAK,SAAb,SAAsB,eAExB,wBACG7B,EAAOqC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMnC,GAAhD,UACE,wBAAK+B,EAAMK,WAFNL,EAAME,GADA,QAUxB,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n  const [searchClicked, setSearchClicked] = useState(false);\n\n  useEffect(() => {\n    if (searchClicked) {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4NWNhZTlkZDZmNDIwODRkNWIxNTBlOGNhZmUzZDBmMSIsInN1YiI6IjY0OWY0NjQ3M2FmOTI5MDBjOGY0MmE2MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.YZn_lK4ht5wkWyPYzyypO1pBwfY3ejbHkrGmxQwrBA4',\n        },\n      };\n\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?query=${value}&include_adult=false&language=en-US&page=1`,\n        options\n      )\n        .then(response => response.json())\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(err => console.error(err));\n    }\n  }, [searchClicked, value]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchClicked(true);\n  };\n\n  const handleChange = event => {\n    setValue(event.currentTarget.value.toLowerCase());\n    if (event.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: event.target.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"movie\"\n          value={movieName}\n          placeholder=\"Search movie\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <h3>{movie.title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","value","setValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","searchClicked","setSearchClicked","useEffect","fetch","method","headers","accept","Authorization","then","response","json","data","results","catch","err","console","error","onSubmit","event","preventDefault","type","name","placeholder","onChange","currentTarget","toLowerCase","target","query","map","movie","to","id","state","from","title"],"sourceRoot":""}